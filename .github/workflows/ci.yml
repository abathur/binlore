name: "Test"
env:
  NIXPKGS_ALLOW_INSECURE: 1
on:
  pull_request:
  push:
  schedule:
    # every sunday morning
    - cron: "0 0 * * 0"
jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: List setuid-wrapper equivalents?
        run: which -a chsh dbus-daemon-launch-helper fusermount3 fusermount kcheckpass kwin_wayland mount newgidmap newgrp newuidmap passwd ping pkexec polkit-agent-helper-1 sg start_kdeinit sudoedit sudo su umount unix_chkpwd || true
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
      - name: Check flake
        run: nix flake check
      - name: Generate binlore for specified packages
        run: nix build .#big
      - name: Move result to artifacts
        run: |
          mkdir artifacts
          cp result/* artifacts/
      - name: Generate underlying YARA rule matches
        run: |
          nix build .#bigmatch
          cat result > artifacts/matches
      - name: De-hash artifacts
        # 2x; lazy, some lines have 2 paths
        run: |
          sed -i -E 's@/nix/store/[a-z0-9]{32}-@@' artifacts/*
          sed -i -E 's@/nix/store/[a-z0-9]{32}-@@' artifacts/*
      - name: Upload lore
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-lore
          path: artifacts
  macos:
    runs-on: macos-latest
    steps:
      - name: List setuid-wrapper equivalents?
        run: which -a chsh dbus-daemon-launch-helper fusermount3 fusermount kcheckpass kwin_wayland mount newgidmap newgrp newuidmap passwd ping pkexec polkit-agent-helper-1 sg start_kdeinit sudoedit sudo su umount unix_chkpwd || true
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
      - name: Check flake
        run: nix flake check
      - name: Generate binlore for specified packages
        run: nix build .#big
      - name: Move result to artifacts
        run: |
          mkdir artifacts
          cp result/* artifacts/
      - name: Generate underlying YARA rule matches
        run: |
          nix build .#bigmatch
          cat result > artifacts/matches
      - name: De-hash artifacts
        run: |
          sed -i '' -E 's@/nix/store/[a-z0-9]{32}-@@' artifacts/*
          sed -i '' -E 's@/nix/store/[a-z0-9]{32}-@@' artifacts/*

      - name: Upload lore
        uses: actions/upload-artifact@v3
        with:
          name: macos-lore
          path: artifacts

  analyze:
    name: Analyze binlore
    needs: [ubuntu, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download lore
        uses: actions/download-artifact@v3
      - name: Show raw YARA rule matches for ... on ubuntu
        run: cat ubuntu-lore/matches
      - name: Show raw YARA rule matches for ... on macos
        run: cat macos-lore/matches
      - name: Show raw YARA matches for 'might' rules on ubuntu
        run: |
          grep -f <(grep -oP '(?<=might..)\S+$' ubuntu-lore/execers) ubuntu-lore/matches
      - name: Show raw YARA matches for 'might' rules on macos
        run: |
          grep -f <(grep -oP '(?<=might..)\S+$' macos-lore/execers) macos-lore/matches
      - name: Show full binlore on ubuntu
        run: cat ubuntu-lore/{execers,wrappers}
      - name: Show full binlore on macos
        run: cat macos-lore/{execers,wrappers}
      - name: Build list of known-unhandled executables
        run: |
          grep -oP '(?<=unhandled\s)\S+$' ubuntu-lore/matches > ubuntu-lore/unhandled
          grep -oP '(?<=unhandled\s)\S+$' macos-lore/matches > macos-lore/unhandled
      - name: Compare macos v. ubuntu
        run: ./compare_ci.py
